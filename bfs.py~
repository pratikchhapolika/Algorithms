from graph import Graph,Vertex
from queue import Queue
from wordLadder import buildGraph

g=buildGraph('a.txt')

def BFS(g,start):  # g is the graph and start is the starting vertex
	start.setDistance(0)
	start.setPredecessor(None)
	verticesQueue=Queue()
	verticesQueue.enqueue(start)
	while verticesQueue.size()>0:
		currentVertex=verticesQueue.dequeue()
		for nbr in currentVertex.getConnections():
			if nbr.getColor()=='white':
				nbr.setColor('gray')
				nbr.setDistance(currentVertex.getDistance()+1)
				nbr.setPredecessor(currentVertex)
				verticesQueue.enqueue(nbr)
		currentVertex.setColor('black')

BFS(g,(i for i in g))

def traverse(y):
	x=y
	while x.getPredecessor():
		print x.id
		x=x.getPredecessor()
	print x.id

traverse(g.getVertex('sage'))


